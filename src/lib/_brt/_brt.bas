'
' _brt: BASIC runtime, minimal core needed to support the compiler's generated code
'

OPTION EXPLICIT
OPTION PRIVATE

' ERROR codes

PUBLIC EXTERN ERR AS INTEGER

PUBLIC CONST AS INTEGER ERR_OUT_OF_DATA             =   4
PUBLIC CONST AS INTEGER ERR_ILLEGAL_FUNCTION_CALL   =   5
PUBLIC CONST AS INTEGER ERR_OUT_OF_MEMORY           =   7
PUBLIC CONST AS INTEGER ERR_SUBSCRIPT_OUT_OF_RANGE  =   9
PUBLIC CONST AS INTEGER ERR_INCOMPATIBLE_ARRAY      =  10
PUBLIC CONST AS INTEGER ERR_BAD_FILE_NUMBER         =  52
PUBLIC CONST AS INTEGER ERR_BAD_FILE_MODE           =  54
PUBLIC CONST AS INTEGER ERR_IO_ERROR                =  57
PUBLIC CONST AS INTEGER ERR_BAD_FILE_NAME           =  64

PUBLIC DECLARE EXTERN SUB _debug_puts    (BYVAL s AS STRING)
PUBLIC DECLARE EXTERN SUB _debug_puts1   (BYVAL s AS BYTE)
PUBLIC DECLARE EXTERN SUB _debug_puts2   (BYVAL s AS INTEGER)
PUBLIC DECLARE EXTERN SUB _debug_puts4   (BYVAL s AS LONG)
PUBLIC DECLARE EXTERN SUB _debug_putu1   (BYVAL s AS UBYTE)
PUBLIC DECLARE EXTERN SUB _debug_putu2   (BYVAL s AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _debug_putu4   (BYVAL s AS ULONG)
PUBLIC DECLARE EXTERN SUB _debug_putf    (BYVAL f AS SINGLE)
PUBLIC DECLARE EXTERN SUB _debug_putbool (BYVAL b AS BOOLEAN)
PUBLIC DECLARE EXTERN SUB _debug_puttab
PUBLIC DECLARE EXTERN SUB _debug_putnl
PUBLIC DECLARE EXTERN SUB _debug_cls
PUBLIC DECLARE EXTERN SUB _debug_break

' AmigaOS library bases

PUBLIC EXTERN SysBase AS VOID PTR
PUBLIC EXTERN DOSBase AS VOID PTR
PUBLIC EXTERN MathBase AS VOID PTR
PUBLIC EXTERN MathTransBase AS VOID PTR

' math support

PUBLIC DECLARE EXTERN FUNCTION fix   (BYVAL f AS SINGLE) AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION int   (BYVAL f AS SINGLE) AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION cint  (BYVAL f AS SINGLE) AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION clng  (BYVAL f AS SINGLE) AS LONG

PUBLIC CONST AS SINGLE PI = 3.14159

PUBLIC DECLARE EXTERN FUNCTION ATN  (BYVAL f AS SINGLE) AS SINGLE LIB  -30 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION SIN  (BYVAL f AS SINGLE) AS SINGLE LIB  -36 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION COS  (BYVAL f AS SINGLE) AS SINGLE LIB  -42 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION TAN  (BYVAL f AS SINGLE) AS SINGLE LIB  -48 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION EXP  (BYVAL f AS SINGLE) AS SINGLE LIB  -78 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION LOG  (BYVAL f AS SINGLE) AS SINGLE LIB  -84 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION SQR  (BYVAL f AS SINGLE) AS SINGLE LIB  -96 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION ASIN (BYVAL f AS SINGLE) AS SINGLE LIB -114 MathTransBase (d0)
PUBLIC DECLARE EXTERN FUNCTION ACOS (BYVAL f AS SINGLE) AS SINGLE LIB -120 MathTransBase (d0)

PUBLIC DECLARE EXTERN FUNCTION ABS  (BYVAL f AS SINGLE) AS SINGLE LIB  -54 MathBase (d0)

' STR$ support

PUBLIC DECLARE EXTERN FUNCTION _s1toa   (BYVAL b AS BYTE    ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _s2toa   (BYVAL i AS INTEGER ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _s4toa   (BYVAL l AS LONG    ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _u1toa   (BYVAL b AS UBYTE   ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _u2toa   (BYVAL i AS UINTEGER) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _u4toa   (BYVAL l AS ULONG   ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _ftoa    (BYVAL f AS SINGLE  ) AS STRING
PUBLIC DECLARE EXTERN FUNCTION _booltoa (BYVAL b AS BOOLEAN ) AS STRING

' VAL* support

PUBLIC DECLARE EXTERN FUNCTION _str2i4_ (BYVAL s AS STRING, BYVAL l AS INTEGER, BYVAL b AS INTEGER) AS LONG
PUBLIC DECLARE EXTERN FUNCTION _str2f_  (BYVAL s AS STRING, BYVAL l AS INTEGER, BYVAL b AS INTEGER) AS SINGLE

PUBLIC DECLARE EXTERN FUNCTION VAL      (BYVAL s AS STRING) AS SINGLE
PUBLIC DECLARE EXTERN FUNCTION VALINT   (BYVAL s AS STRING) AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION VALUINT  (BYVAL s AS STRING) AS UINTEGER
PUBLIC DECLARE EXTERN FUNCTION VALLNG   (BYVAL s AS STRING) AS LONG
PUBLIC DECLARE EXTERN FUNCTION VALULNG  (BYVAL s AS STRING) AS ULONG

' string utils

PUBLIC DECLARE EXTERN FUNCTION LEN    (BYVAL s AS STRING)  AS LONG
PUBLIC DECLARE EXTERN FUNCTION CHR$   (BYVAL i AS INTEGER) AS STRING
PUBLIC DECLARE EXTERN FUNCTION ASC    (BYVAL s AS STRING)  AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION MID$   (BYVAL s AS STRING, BYVAL n AS INTEGER, BYVAL m AS INTEGER=-1) AS STRING
PUBLIC DECLARE EXTERN FUNCTION UCASE$ (BYVAL s AS STRING) AS STRING
PUBLIC DECLARE EXTERN FUNCTION LCASE$ (BYVAL s AS STRING) AS STRING
PUBLIC DECLARE EXTERN FUNCTION LEFT$  (BYVAL s AS STRING, BYVAL n AS INTEGER) AS STRING
PUBLIC DECLARE EXTERN FUNCTION RIGHT$ (BYVAL s AS STRING, BYVAL n AS INTEGER) AS STRING
PUBLIC DECLARE EXTERN FUNCTION INSTR  (BYVAL n AS INTEGER=1, BYVAL x AS STRING, BYVAL y AS STRING) AS INTEGER

' (dynamic) memory

PUBLIC DECLARE EXTERN FUNCTION ALLOCATE   (BYVAL size AS ULONG, BYVAL flags AS ULONG=0) AS VOID PTR
PUBLIC DECLARE EXTERN SUB      DEALLOCATE (p AS VOID PTR)
PUBLIC DECLARE EXTERN SUB      _MEMSET    (dst AS BYTE PTR, c AS BYTE, n AS ULONG)
PUBLIC DECLARE EXTERN FUNCTION FRE        (BYVAL x AS INTEGER) AS ULONG

PUBLIC DECLARE EXTERN SUB POKE  (BYVAL adr AS ULONG, BYVAL b AS BYTE)
PUBLIC DECLARE EXTERN SUB POKEW (BYVAL adr AS ULONG, BYVAL w AS UINTEGER)
PUBLIC DECLARE EXTERN SUB POKEL (BYVAL adr AS ULONG, BYVAL l AS ULONG)

PUBLIC DECLARE EXTERN FUNCTION PEEK  (BYVAL adr AS ULONG) AS BYTE
PUBLIC DECLARE EXTERN FUNCTION PEEKW (BYVAL adr AS ULONG) AS INTEGER
PUBLIC DECLARE EXTERN FUNCTION PEEKL (BYVAL adr AS ULONG) AS ULONG

' random numbers

PUBLIC DECLARE EXTERN FUNCTION RND       (BYVAL n AS SINGLE = 1) AS SINGLE
PUBLIC DECLARE EXTERN SUB      RANDOMIZE (BYVAL seed AS SINGLE)

' OOP support: every class inherits from CObject which is declared here

PUBLIC CLASS CObject

    PUBLIC:

        DECLARE EXTERN VIRTUAL FUNCTION ToString    ()                         AS STRING
        DECLARE EXTERN VIRTUAL FUNCTION Equals      (BYVAL obj AS CObject PTR) AS BOOLEAN
        DECLARE EXTERN VIRTUAL FUNCTION GetHashCode ()                         AS ULONG

END CLASS


' dynamic array support

PUBLIC TYPE _DARRAY_BOUNDS_T
    PUBLIC:
        AS ULONG lbound, ubound, numElements
END TYPE

PUBLIC CLASS _DARRAY_T

    PUBLIC:
        DECLARE EXTERN CONSTRUCTOR (BYVAL elementSize AS ULONG)

        DECLARE EXTERN SUB      REDIM  (BYVAL numDims AS UINTEGER, BYVAL preserve AS BOOLEAN, ...)
        DECLARE EXTERN FUNCTION IDXPTR (BYVAL dimCnt AS UINTEGER, ...) AS VOID PTR
        DECLARE EXTERN FUNCTION LBOUND (BYVAL d AS INTEGER) AS INTEGER
        DECLARE EXTERN FUNCTION UBOUND (BYVAL d AS INTEGER) AS INTEGER
        DECLARE EXTERN SUB      COPY   (BYREF darray AS _DARRAY_T)
        DECLARE EXTERN SUB      ERASE  ()
        DECLARE EXTERN SUB      CLEAR  ()

    PRIVATE:

        AS VOID PTR             data
        AS UINTEGER             numDims
        AS ULONG                elementSize
        AS _DARRAY_BOUNDS_T PTR bounds

END CLASS

' DATA / READ / RESTORE support

PUBLIC DECLARE EXTERN SUB _aqb_restore (BYVAL p AS VOID PTR)
PUBLIC DECLARE EXTERN SUB _aqb_read1   (BYVAL v AS VOID PTR)
PUBLIC DECLARE EXTERN SUB _aqb_read2   (BYVAL v AS VOID PTR)
PUBLIC DECLARE EXTERN SUB _aqb_read4   (BYVAL v AS VOID PTR)
PUBLIC DECLARE EXTERN SUB _aqb_readStr (BYVAL v AS VOID PTR)

' PRINT statement support:

PUBLIC DECLARE EXTERN SUB _aio_puts    (BYVAL fno AS UINTEGER, BYVAL s AS STRING  )
PUBLIC DECLARE EXTERN SUB _aio_puts1   (BYVAL fno AS UINTEGER, BYVAL b AS BYTE    )
PUBLIC DECLARE EXTERN SUB _aio_puts2   (BYVAL fno AS UINTEGER, BYVAL i AS INTEGER )
PUBLIC DECLARE EXTERN SUB _aio_puts4   (BYVAL fno AS UINTEGER, BYVAL l AS LONG    )
PUBLIC DECLARE EXTERN SUB _aio_putu1   (BYVAL fno AS UINTEGER, BYVAL u AS UBYTE   )
PUBLIC DECLARE EXTERN SUB _aio_putu2   (BYVAL fno AS UINTEGER, BYVAL u AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _aio_putu4   (BYVAL fno AS UINTEGER, BYVAL u AS ULONG   )
PUBLIC DECLARE EXTERN SUB _aio_putf    (BYVAL fno AS UINTEGER, BYVAL f AS SINGLE  )
PUBLIC DECLARE EXTERN SUB _aio_putbool (BYVAL fno AS UINTEGER, BYVAL b AS BOOLEAN )
PUBLIC DECLARE EXTERN SUB _aio_putnl   (BYVAL fno AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _aio_puttab  (BYVAL fno AS UINTEGER)

' WRITE statement support:

PUBLIC DECLARE EXTERN SUB _aio_writes4   (BYVAL fno AS UINTEGER, BYVAL l AS LONG    )
PUBLIC DECLARE EXTERN SUB _aio_writes2   (BYVAL fno AS UINTEGER, BYVAL i AS INTEGER )
PUBLIC DECLARE EXTERN SUB _aio_writes1   (BYVAL fno AS UINTEGER, BYVAL b AS BYTE    )
PUBLIC DECLARE EXTERN SUB _aio_writeu4   (BYVAL fno AS UINTEGER, BYVAL u AS ULONG   )
PUBLIC DECLARE EXTERN SUB _aio_writeu2   (BYVAL fno AS UINTEGER, BYVAL u AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _aio_writeu1   (BYVAL fno AS UINTEGER, BYVAL u AS UBYTE   )
PUBLIC DECLARE EXTERN SUB _aio_writef    (BYVAL fno AS UINTEGER, BYVAL f AS SINGLE  )
PUBLIC DECLARE EXTERN SUB _aio_writebool (BYVAL fno AS UINTEGER, BYVAL b AS BOOLEAN )
PUBLIC DECLARE EXTERN SUB _aio_writes    (BYVAL fno AS UINTEGER, BYVAL s AS STRING  )
PUBLIC DECLARE EXTERN SUB _aio_writecomma(BYVAL fno AS UINTEGER                     )

' [ LINE ] INPUT support:

PUBLIC DECLARE EXTERN SUB _aio_line_input             (BYVAL prompt AS STRING, BYREF s AS STRING, BYVAL do_nl AS BOOLEAN)
PUBLIC DECLARE EXTERN SUB _aio_console_input          (BYVAL qm AS BOOLEAN, BYVAL prompt AS STRING, BYVAL do_nl AS BOOLEAN)
PUBLIC DECLARE EXTERN SUB _aio_inputs1                (BYVAL fno AS UINTEGER, BYREF v AS BYTE    )
PUBLIC DECLARE EXTERN SUB _aio_inputu1                (BYVAL fno AS UINTEGER, BYREF v AS UBYTE   )
PUBLIC DECLARE EXTERN SUB _aio_inputs2                (BYVAL fno AS UINTEGER, BYREF v AS INTEGER )
PUBLIC DECLARE EXTERN SUB _aio_inputu2                (BYVAL fno AS UINTEGER, BYREF v AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _aio_inputs4                (BYVAL fno AS UINTEGER, BYREF v AS LONG    )
PUBLIC DECLARE EXTERN SUB _aio_inputu4                (BYVAL fno AS UINTEGER, BYREF v AS ULONG   )
PUBLIC DECLARE EXTERN SUB _aio_inputf                 (BYVAL fno AS UINTEGER, BYREF v AS SINGLE  )
PUBLIC DECLARE EXTERN SUB _aio_inputs                 (BYVAL fno AS UINTEGER, BYREF v AS STRING  )
PUBLIC DECLARE EXTERN SUB _aio_set_dos_cursor_visible (BYVAL visible AS BOOLEAN)

PUBLIC DECLARE EXTERN SUB CLS
PUBLIC DECLARE EXTERN SUB LOCATE                      (BYVAL l AS INTEGER=-1, BYVAL c AS INTEGER=-1)


' file i/o

PUBLIC CONST AS UINTEGER FILE_MODE_RANDOM      = 0
PUBLIC CONST AS UINTEGER FILE_MODE_INPUT       = 1
PUBLIC CONST AS UINTEGER FILE_MODE_OUTPUT      = 2
PUBLIC CONST AS UINTEGER FILE_MODE_APPEND      = 3
PUBLIC CONST AS UINTEGER FILE_MODE_BINARY      = 4

PUBLIC CONST AS UINTEGER FILE_ACCESS_READ      = 0
PUBLIC CONST AS UINTEGER FILE_ACCESS_WRITE     = 1
PUBLIC CONST AS UINTEGER FILE_ACCESS_READWRITE = 2

PUBLIC DECLARE EXTERN SUB _aio_open  (BYVAL fname AS STRING, BYVAL mode AS UINTEGER, BYVAL access AS UINTEGER, BYVAL fno AS UINTEGER, BYVAL recordlen AS UINTEGER)
PUBLIC DECLARE EXTERN SUB _aio_close (BYVAL fno AS UINTEGER)

PUBLIC DECLARE EXTERN FUNCTION EOF (BYVAL fno AS UINTEGER) AS BOOLEAN

' misc

PUBLIC DECLARE EXTERN SUB      _aqb_assert   (BYVAL b AS BOOLEAN, BYVAL s AS STRING)
PUBLIC DECLARE EXTERN SUB      ERROR         (BYVAL i AS INTEGER)
PUBLIC DECLARE EXTERN SUB      RESUME NEXT
PUBLIC DECLARE EXTERN SUB      ON ERROR CALL (BYVAL p AS SUB)
PUBLIC DECLARE EXTERN SUB      ON EXIT CALL  (BYVAL p AS SUB)
PUBLIC DECLARE EXTERN SUB      ON BREAK CALL (BYVAL p AS SUB)

PUBLIC DECLARE EXTERN SUB      SYSTEM

PUBLIC DECLARE EXTERN FUNCTION TIMER         () AS SINGLE
PUBLIC DECLARE EXTERN FUNCTION DATE$         ()
PUBLIC DECLARE EXTERN SUB      SLEEP FOR     (BYVAL s AS SINGLE)

PUBLIC CONST AS VOID PTR NULL = 0

PUBLIC EXTERN g_stdout AS VOID PTR

