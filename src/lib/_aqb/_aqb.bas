'
' _AQB module interface
'

OPTION EXPLICIT
OPTION PRIVATE

' PRINT statement support:

PUBLIC DECLARE SUB _aio_puts    (BYVAL s AS STRING  )
PUBLIC DECLARE SUB _aio_puts1   (BYVAL b AS BYTE    )
PUBLIC DECLARE SUB _aio_puts2   (BYVAL i AS INTEGER )
PUBLIC DECLARE SUB _aio_puts4   (BYVAL l AS LONG    )
PUBLIC DECLARE SUB _aio_putu1   (BYVAL u AS UBYTE   )
PUBLIC DECLARE SUB _aio_putu2   (BYVAL u AS UINTEGER)
PUBLIC DECLARE SUB _aio_putu4   (BYVAL u AS ULONG   )
PUBLIC DECLARE SUB _aio_putf    (BYVAL f AS SINGLE  )
PUBLIC DECLARE SUB _aio_putbool (BYVAL b AS BOOLEAN )
PUBLIC DECLARE SUB _aio_putnl   ()
PUBLIC DECLARE SUB _aio_puttab  ()

PUBLIC DECLARE SUB      LOCATE  (BYVAL l AS INTEGER=-1, BYVAL c AS INTEGER=-1)
PUBLIC DECLARE FUNCTION CSRLIN  () AS INTEGER
PUBLIC DECLARE FUNCTION POS     (BYVAL dummy AS INTEGER) AS INTEGER

' --------------------------------------------------------------------------------------------------------
' --
' -- AmigaBASIC like screens, windows and graphics
' --
' --------------------------------------------------------------------------------------------------------

' error codes

PUBLIC CONST AS INTEGER ERR_WIN_OPEN      = 1
PUBLIC CONST AS INTEGER ERR_SCREEN_OPEN   = 2
PUBLIC CONST AS INTEGER ERR_PALETTE       = 3
PUBLIC CONST AS INTEGER ERR_COLOR         = 4
PUBLIC CONST AS INTEGER ERR_AREA          = 5
PUBLIC CONST AS INTEGER ERR_PATTERN       = 6
PUBLIC CONST AS INTEGER ERR_WIN_CLOSE     = 7
PUBLIC CONST AS INTEGER ERR_WIN_OUTPUT    = 8
PUBLIC CONST AS INTEGER ERR_SCREEN_CLOSE  = 9

' screen modes

PUBLIC CONST AS INTEGER AS_MODE_LORES                = 1
PUBLIC CONST AS INTEGER AS_MODE_HIRES                = 2
PUBLIC CONST AS INTEGER AS_MODE_LORES_LACED          = 3
PUBLIC CONST AS INTEGER AS_MODE_HIRES_LACED          = 4
PUBLIC CONST AS INTEGER AS_MODE_HAM                  = 5
PUBLIC CONST AS INTEGER AS_MODE_EXTRAHALFBRITE       = 6
PUBLIC CONST AS INTEGER AS_MODE_HAM_LACED            = 7
PUBLIC CONST AS INTEGER AS_MODE_EXTRAHALFBRITE_LACED = 8

PUBLIC DECLARE SUB SCREEN (BYVAL id AS INTEGER, BYVAL width AS INTEGER, BYVAL height AS INTEGER, BYVAL depth AS INTEGER, BYVAL mode AS INTEGER, BYVAL title AS STRING=NULL)
PUBLIC DECLARE SUB SCREEN CLOSE (BYVAL id AS INTEGER)


' window flags

PUBLIC CONST AS INTEGER AW_FLAG_SIZE       =  1
PUBLIC CONST AS INTEGER AW_FLAG_DRAG       =  2
PUBLIC CONST AS INTEGER AW_FLAG_DEPTH      =  4
PUBLIC CONST AS INTEGER AW_FLAG_CLOSE      =  8
PUBLIC CONST AS INTEGER AW_FLAG_REFRESH    = 16
PUBLIC CONST AS INTEGER AW_FLAG_BACKDROP   = 32
PUBLIC CONST AS INTEGER AW_FLAG_BORDERLESS = 64

' WINDOW id [, [Title] [, [(x1,y1)-(x2,y2)] [, [Flags] [, Screen] ] ]
PUBLIC DECLARE SUB WINDOW (BYVAL id AS INTEGER, BYVAL title AS STRING = NULL, _
                           _COORD2(BYVAL s1 AS BOOLEAN=FALSE, BYVAL x1 AS INTEGER=-1, BYVAL y1 AS INTEGER=-1, BYVAL s2 AS BOOLEAN=FALSE, BYVAL x2 AS INTEGER=-1, BYVAL y2 AS INTEGER=-1), _
                           BYVAL flags AS INTEGER=15, BYVAL scrid AS INTEGER = 0)

PUBLIC DECLARE SUB WINDOW CLOSE   (BYVAL id AS INTEGER = 0)
PUBLIC DECLARE SUB WINDOW OUTPUT  (BYVAL id AS INTEGER = 0)
PUBLIC DECLARE SUB ON WINDOW CALL (BYVAL p AS SUB)
PUBLIC DECLARE FUNCTION WINDOW    (BYVAL n AS INTEGER) AS ULONG
PUBLIC DECLARE SUB SLEEP

PUBLIC DECLARE SUB LINE (_COORD2(BYVAL s1 AS BOOLEAN=FALSE, BYVAL x1 AS INTEGER=-1, BYVAL y1 AS INTEGER=-1, BYVAL s2 AS BOOLEAN=FALSE, BYVAL x2 AS INTEGER=-1, BYVAL y2 AS INTEGER=-1), _
                         BYVAL c AS INTEGER=-1, _LINEBF(BYVAL bf AS INTEGER=0) )
PUBLIC DECLARE SUB PSET (_COORD(BYVAL s AS BOOLEAN=FALSE, BYVAL x1 AS INTEGER, BYVAL y AS INTEGER), BYVAL c AS INTEGER=-1)
PUBLIC DECLARE SUB PALETTE (BYVAL cid AS INTEGER, BYVAL red AS SINGLE, BYVAL green AS SINGLE, BYVAL blue AS SINGLE)
PUBLIC DECLARE SUB COLOR   (BYVAL fg AS INTEGER=-1, BYVAL bg AS INTEGER=-1, BYVAL o AS INTEGER=-1)

PUBLIC DECLARE SUB AREA (_COORD(BYVAL s AS BOOLEAN=FALSE, BYVAL x1 AS INTEGER, BYVAL y AS INTEGER))
PUBLIC DECLARE SUB AREAFILL (BYVAL mode AS INTEGER=0)
PUBLIC DECLARE SUB AREA OUTLINE (BYVAL enabled AS BOOLEAN)

PUBLIC DECLARE SUB PATTERN (BYVAL lineptrn AS UINTEGER = &HFFFF, BYREF areaptrn() AS INTEGER = NULL)

PUBLIC DECLARE FUNCTION INKEY$ ()

